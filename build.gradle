// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'versions.gradle'
buildscript {
    ext.kotlin_version = '1.4.20'

    repositories {
        google()
        jcenter()
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/repository/public/' }
    }
}

//静态代码扫描相关plugins
subprojects { subProject ->
    plugins.withId('com.android.application') {
//        subProject.apply from: file("${project.rootDir}/code_analysis/findbugs.gradle")
        subProject.apply from: file("${project.rootDir}/code_analysis/lint.gradle")
        subProject.apply from: file("${project.rootDir}/code_analysis/jacoco.gradle")
        subProject.apply plugin: 'kotlin-android'
    }

    plugins.withId('com.android.library') {
//        subProject.apply from: file("${project.rootDir}/code_analysis/findbugs.gradle")
        subProject.apply from: file("${project.rootDir}/code_analysis/lint.gradle")
        subProject.apply from: file("${project.rootDir}/code_analysis/jacoco.gradle")
        // maven
        subProject.apply plugin: 'maven'
        subProject.apply plugin: 'kotlin-android'
    }

    plugins.withId('java') {
//        subProject.apply from: file("${project.rootDir}/code_analysis/findbugs-java.gradle")
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
